

---
NOTE: try both the front and backend on docker

NEEDED: key goals {
    Go: Finish Go backend for everything
    Go: Finish testing
    Go: Finish Go backend CI/CD
    -
    Node: Finish Node backend testing
    Node: Finish Node backend CI/CD
    Node: Finish Node backend testing
    Node: Finish Node backend testing
    -
    Frontend: Finish the jest test and coverage
    Frontend: Finish the cypress test and coverage
    Frontend: Finish the Frontend test CI/CD
}
NEEDED: when all keyGoals is completed, please start my us vs and OdiUp


deploy {
    deploy to staging and make sure working when merged with main branch
    ---
    deploy staging to aws and test to make sure all is working properly
    create your database @ railway for staging
}
FrontEnd {
    {revise jest *2}
    {revise cypress *2}
    finish test coverage both 90%
    ---
    ci/cd both with serious testing
    ---
    dockerize
    ---
    move to node-backend
}
Node {
    watch video on graphQl and jwt authentication
    finish working on the graphQl side
    ---
    finish test coverage 90%
    ---
    write the ci/cd for the backend, make sure the test coverage is above 90%
    ---
}
Golang {
    Goals:
    finish the ci/cd pipeline
    Finish jest revision*2
    *Finish cypress revision*2
    *move to FrontEnd
    ---
    ---
    commit all the changes
    finish jest revision
    finish cypress revision
    do go backEnd ci/cd integration
    ---
    ---
    sort out videos so you can pick-up the ones with the hosting
    dockerize the app to test whats-up
    turn up frontEnd {
        test with containers
        test with out containers
    }
    ---

    later {
        verify a user login - function, the middleware parole
        work on the logout
        add cors to the application if the mode is production
    }

    testing {
        go test -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html
        go tool cover -func=coverage.out
        go test -v ./...
        go test -v
    }
    explanation {
        print out the coverage of your test
        convert the printout into html so you can see it on the web
        see the total average of your test cover for all the test
        verbose testing
    }
}
