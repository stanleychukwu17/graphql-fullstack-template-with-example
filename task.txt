

---
NOTE: try both the front and backend on docker

NEEDED: key goals {
    Go: Finish Go backend for everything
    Go: Finish testing
    Go: Finish Go backend CI/CD
    -
    Node: Finish Node backend testing
    Node: Finish Node backend CI/CD
    Node: Finish Node backend testing
    Node: Finish Node backend testing
    -
    Frontend: Finish the jest test and coverage
    Frontend: Finish the cypress test and coverage
    Frontend: Finish the Frontend test CI/CD
}
NEEDED: when all keyGoals is completed, please start my us vs and OdiUp


deploy {
    deploy to staging and make sure working when merged with main branch
    ---
    deploy staging to aws and test to make sure all is working properly
    create your database @ railway for staging
}
FrontEnd {
    {revise jest *2}
    {revise cypress *2}
    finish test coverage both 90%
    ---
    ci/cd both with serious testing
    ---
    dockerize
    ---
    move to node-backend
}
Node {
    watch video on graphQl and jwt authentication
    finish working on the graphQl side
    ---
    finish test coverage 90%
    ---
    write the ci/cd for the backend, make sure the test coverage is above 90%
    ---
}
Golang {
    Goals:
    commit all chang
    finish all unit testing
    finish all integration testing
    finish the ci/cd pipeline
    Finish jest revision*2
    *Finish cypress revision*2
    *No move to FrontEnd

    commit the code
    write integrate
    ---
    ci/cd with testing check
    ---
    dockerize the app to test whats-up
    ---
    5:00 to 6pm

    later {
        verify a user login - function, the middleware parole
        work on the logout
        add cors to the application if the mode is production
    }

    testing {
        test all repo: go test -coverprofile=coverage.out ./...
        test report: go tool cover -html=coverage.out -o coverage.html
        see more info: go test -v ./...
    }
}
