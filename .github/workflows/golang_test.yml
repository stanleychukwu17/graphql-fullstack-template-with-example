name: Testing golang backend

on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths:
        - 'server-golang/**'
    pull_request:
        branches:
            - main
        paths:
        - 'server-golang/**'
jobs:
    test:
        name: Testing golang backend
        runs-on: ubuntu-latest

        steps:
          - name: Set up envirnment vairables
            run: |
              ENV=continuous_integration
              PORT=4000
              TIMEZONE=Africa/Lagos
              DB_NAME=template_test_db
              POSTGRES_DB_USER=${{ secrets.POSTGRES_DB_USER }}
              POSTGRES_DB_PASSWORD=${{ secrets.POSTGRES_DB_PASSWORD }}
              POSTGRES_DB_PORT=5432
              POSTGRES_DB_TIMEZONE=Africa/Lagos
              MYSQL_DB_USER=${{ secrets.MYSQL_DB_USER }}
              MYSQL_DB_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }}
              MYSQL_DB_PORT=3306
              MYSQL_DB_TIMEZONE=Africa/Lagos
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              JWT_TIME_1=7
              JWT_TIME_2=365
              env
              echo "------"
              echo $ENV
              echo $PORT
              exit 1

          - name: Check out code
            uses: actions/checkout@v4

          - name: Set up Go
            uses: actions/setup-go@v4
            with:
                go-version: 1.22.2

          - name: Install Docker
            run: |
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              sudo systemctl start docker
              sudo systemctl enable docker
              docker --version

          - name: Install dependencies
            run: go mod download
            working-directory: server-golang

          - name: Run tests
            run: go test -v ./...
            working-directory: server-golang
